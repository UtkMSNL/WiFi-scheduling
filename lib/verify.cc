#include <cstring>
#include "verify.h"
#include <itpp/itcomm.h>	// for vec

const char ref_data_bits_24qam

const char ref_encoded_bits_24qam

const int ref_nonMarker_24qam[] = {0,0,0,0,0,0,0,3,19,20,14,0,0,0,0,0,0,0,0,0,21,23,3,18,5,0,21,9,16,3,18,5,0,21,9,16,3,18,5,0,20,6,8,8,4,19,12,1,3,21,0,16,19,12,1,3,21,0,16,19,12,1,18,20,19,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,9,10,22,0,0,0,1,15,4,2,14,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,5,18,16,8,13,10,16,4,20,1,7,4,10,22,17,19,19,20,21,0,18,17,20,0,0};

const int ref_marker_24qam[] = {7,5,6,4,4,4,6,4,3,0,0,0,5,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,2,3};

double calcINTDiffRate(const int * decoded, const int * ref, int nItems, bool debug) {
	int nErr = 0;
	for(int i=0;i<nItems;i++) {
		if(debug) {
			std::cout << std::setw(4) << std::setfill('0') << i << ": decoded = " << decoded[i] << ", reference = " << ref[i];
		}
		if(decoded[i] != ref[i]) {
			nErr++;
			if(debug) {
				std::cout << ", error " << nErr << std::endl;
			}
		}
		else {
			if(debug) {
				std::cout << std::endl;
			}
		}
	}
	return 1.0*nErr/nItems;
}
